<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.salmon.design.user.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="com.salmon.design.user.pojo.User" >
    <constructor >
      <idArg column="uid" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="username" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="password" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="roleId" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="Last_login" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="ip" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="status" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="BZ" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="email" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="number" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="phone" jdbcType="VARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    uid, username, password, name, roleId, Last_login, ip, status, BZ, email, number, 
    phone
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user
    where uid = #{uid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where uid = #{uid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.salmon.design.user.pojo.User" >
    insert into user (uid, username, password, 
      name, roleId, Last_login, 
      ip, status, BZ, email, 
      number, phone)
    values (#{uid,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{roleid,jdbcType=VARCHAR}, #{lastLogin,jdbcType=VARCHAR}, 
      #{ip,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, #{bz,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{number,jdbcType=INTEGER}, #{phone,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.salmon.design.user.pojo.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="uid != null" >
        uid,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="roleid != null" >
        roleId,
      </if>
      <if test="lastLogin != null" >
        Last_login,
      </if>
      <if test="ip != null" >
        ip,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="bz != null" >
        BZ,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="number != null" >
        number,
      </if>
      <if test="phone != null" >
        phone,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="uid != null" >
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="roleid != null" >
        #{roleid,jdbcType=VARCHAR},
      </if>
      <if test="lastLogin != null" >
        #{lastLogin,jdbcType=VARCHAR},
      </if>
      <if test="ip != null" >
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="bz != null" >
        #{bz,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="number != null" >
        #{number,jdbcType=INTEGER},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.salmon.design.user.pojo.User" >
    update user
    <set >
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="roleid != null" >
        roleId = #{roleid,jdbcType=VARCHAR},
      </if>
      <if test="lastLogin != null" >
        Last_login = #{lastLogin,jdbcType=VARCHAR},
      </if>
      <if test="ip != null" >
        ip = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="bz != null" >
        BZ = #{bz,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="number != null" >
        number = #{number,jdbcType=INTEGER},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
    </set>
    where uid = #{uid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.salmon.design.user.pojo.User" >
    update user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      roleId = #{roleid,jdbcType=VARCHAR},
      Last_login = #{lastLogin,jdbcType=VARCHAR},
      ip = #{ip,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      BZ = #{bz,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      number = #{number,jdbcType=INTEGER},
      phone = #{phone,jdbcType=VARCHAR}
    where uid = #{uid,jdbcType=INTEGER}
  </update>

  <select id="checkUsername" resultType="int" parameterType="string">
    select count(1) from user
    where username = #{username}
  </select>

  <select id="checkEmail" resultType="int" parameterType="string">
    select count(1) from user
    where email = #{email}
  </select>

  <select id="checkEmailByUserId" resultType="int" parameterType="map">
    select count(1) from user
    where email = #{email}
      and uid != #{userId}
  </select>

  <select id="selectLogin" resultMap="BaseResultMap" parameterType="map">
    SELECT
    <include refid="Base_Column_List"/>
    from user
    where username = #{username}
    and password = #{password}
  </select>
</mapper>